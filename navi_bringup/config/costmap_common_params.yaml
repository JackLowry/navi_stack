transform_tolerance: 0.5

# It's not possible to use the robot_radius parameter because Navi does not
# turn about its center.
# FIXME: navfn assumes that the robot is centered in its footprint
inflation_radius: 0.75
footprint:
- [  0.178,  0.49 ] # front left
- [ -0.815,  0.49 ] # back left
- [ -0.815, -0.49 ] # back right
- [  0.178, -0.49 ] # front right

# Configure the map to use voxels. It would be better to use a 2D costmap, but
# height is necessary to differentiate between physical obstacles and detected
# lines. Otherwise, the two clearing operations would interfere.
map_type: voxel
origin_z: 0.0
z_resolution: 0.3
z_voxels: 2

min_obstacle_height: 0.0
max_obstacle_height: 0.6
observation_sources: laser lines_left lines_right

laser: {
    topic: /laser,
    data_type: LaserScan,
    obstacle_range: 4.0,
    raytrace_range: 100.0,
    min_obstacle_height: 0.1,
    marking: true,
    clearing: true
}
lines_left: {
    topic: /vision/left/line_points,
    data_type: PointCloud2,
    marking: true,
    clearing: false
}
lines_right: {
    topic: /vision/right/line_points,
    data_type: PointCloud2,
    marking: true,
    clearing: false
}
